<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "mybatis-3-mapper.dtd">
  
 <mapper namespace="com.foodbox.server.mapper.ConsumerMapper">
	
	<!-- 소비자 ID 중복 확인 -->
	 <select id="idExist" parameterType="string" resultType="boolean">
		select exists
		(
			select * from consumer
			where cons_id = #{cons_id}
		)
	 </select>
	 
	 <!-- 소비자 계정 등록 -->
	 <insert id="register" parameterType="com.foodbox.server.data.ConsumerDTO">
		insert into consumer(cons_id, cons_pw)
		values (#{cons_id}, #{cons_pw})
	 </insert>
	 
	 <!-- 소비자 로그인 -->
	 <select id="login" parameterType="com.foodbox.server.data.LoginRequest" resultType="boolean">
		select exists
		(
			select * from consumer
			where cons_id = #{id}
			and cons_pw = #{pw}
		)
	 </select>
	 
	 <!-- 배달 주문 요청 -->
	 <insert id="order">
		insert into orders(order_id, cons_id, store_id, state)
		values ((select ifnull(max(order_id) + 1, 1) from orders as o), #{cons_id}, #{store_id}, '0')
	 </insert>
	 
	 <!-- 가게 목록 전송 -->
	 <select id="getStoreList" resultType="com.foodbox.server.data.StoreDTO">
		 select store_id, store_name from store
	 </select>
	 
	 <!-- 주문 목록 전송 -->
	 <select id="getOrderList" parameterType="string" resultType="com.foodbox.server.data.OrdersDTO">
		select
		order_id,
		store_id,
		(select store.store_name from store where store.store_id = orders.store_id) as store_name,
		state
		from orders
		where cons_id = #{cons_id}
	 </select>
	 
	 <!-- 주문 정보 전송 -->
	 <select id="getOrderSpec" parameterType="int" resultType="com.foodbox.server.data.OrdersDTO">
		 select * from orders where order_id = #{order_id}
	 </select>
 </mapper>
 